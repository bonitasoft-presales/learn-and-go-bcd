{
  "designerVersion" : "1.8.39",
  "id" : "customReadOnlyCheckBox",
  "name" : "readOnlyCheckBox",
  "lastUpdate" : 1556619040750,
  "template" : "<!-- The custom widget template is defined here\n   - You can use standard HTML tags and AngularJS built-in directives, scope and interpolation system\n   - Custom widget properties defined on the right can be used as variables in a templates with properties.newProperty\n   - Functions exposed in the controller can be used with ctrl.newFunction()\n   - You can use the 'environment' property injected in the scope when inside the Editor whiteboard. It allows to define a mockup\n     of the Custom Widget to be displayed in the whiteboard only. By default the widget is represented by an auto-generated icon\n     and its name (See the <span> below).\n-->\n<style>\n    .glyphicon-ok {\n    color: green;\n}\n\n.glyphicon-remove {\n    color: red;\n}\n\n</style> \n<div>\n    <span class=\"glyphicon glyphicon-ok\" ng-show=\"properties.booleanValue\"></span>\n    <span class=\"glyphicon glyphicon-remove\" ng-hide=\"properties.booleanValue\"></span>\n    <span>{{properties.value | uiTranslate}}</span>\n</div>    \n",
  "controller" : "/**\n * The controller is a JavaScript function that augments the AngularJS scope and exposes functions that can be used in the custom widget template\n * \n * Custom widget properties defined on the right can be used as variables in a controller with $scope.properties\n * To use AngularJS standard services, you must declare them in the main function arguments.\n * \n * You can leave the controller empty if you do not need it.\n */\nfunction ($scope) {\n   \n}",
  "custom" : true,
  "properties" : [ {
    "label" : "Value",
    "name" : "value",
    "type" : "text",
    "defaultValue" : "This is the initial value",
    "bond" : "expression"
  }, {
    "label" : "booleanValue",
    "name" : "booleanValue",
    "help" : "true / false",
    "type" : "boolean",
    "defaultValue" : true,
    "bond" : "expression"
  } ],
  "assets" : [ ],
  "requiredModules" : [ ],
  "type" : "widget",
  "hasHelp" : false
}